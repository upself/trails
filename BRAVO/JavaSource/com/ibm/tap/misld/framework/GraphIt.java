package com.ibm.tap.misld.framework;

import java.awt.Color;
import java.awt.Font;
import java.awt.GradientPaint;
import java.io.IOException;
import java.io.OutputStream;

import javax.naming.NamingException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.hibernate.HibernateException;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.title.TextTitle;
import org.jfree.data.category.DefaultCategoryDataset;

import com.ibm.tap.misld.delegate.customerSettings.MisldAccountSettingsReadDelegate;
import com.ibm.tap.misld.delegate.customerSettings.MisldRegistrationReadDelegate;
import com.ibm.tap.misld.framework.exceptions.ApplicationException;
import com.ibm.tap.misld.report.PriceReportDelegate;

/**
 * A basic servlet that returns a PNG image file generated by JFreeChart.
 * <P>
 * This class is described in the JFreeChart Developer Guide.
 * 
 * @author David Gilbert
 */
public class GraphIt extends HttpServlet {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		// Get rid of XDISPLAY crap
		System.setProperty("java.awt.headless", "true");

		// Get the view to draw
		String viewType = request.getParameter("viewType");

		OutputStream out = response.getOutputStream();
		response.setContentType("image/png");

		if (viewType.equals(Constants.REGISTRATION_REPORT)) {
			try {
				drawRegistrationStatus(out, request);
			} catch (HibernateException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (ApplicationException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (NamingException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		else if(viewType.equals(Constants.PRICE_REPORT_NOTIFICATION)) {
			try {
				drawPriceReportNotification(out, request);
			} catch (HibernateException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (ApplicationException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (NamingException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}	
		}
		else if(viewType.equals(Constants.ACCOUNT_LOCK_STATUS)) {
			try {
				drawAccountLockStatus(out, request);
			} catch (HibernateException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (ApplicationException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (NamingException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}	
		}
	}

	public void drawRegistrationStatus(OutputStream out,
			HttpServletRequest request) throws HibernateException,
			ApplicationException, NamingException, IOException {

		DefaultCategoryDataset dataset = MisldRegistrationReadDelegate
				.getRegistrationStatus();

		JFreeChart chart = ChartFactory.createBarChart("", "Asset Dept.",
				"Status", dataset, PlotOrientation.HORIZONTAL, true, true,
				false);

		String titleStr = "Registration Status";

		TextTitle title = new TextTitle(titleStr, new Font("SansSerif",
				Font.BOLD, 12));

		chart.setTitle(title);

		chart.setBackgroundPaint(new GradientPaint(0, 0, Color.white, 0, 1000,
				Color.blue));

		CategoryPlot plot = chart.getCategoryPlot();
		BarRenderer renderer = (BarRenderer) plot.getRenderer();
		renderer.setSeriesPaint(0, Color.orange);
		renderer.setSeriesPaint(1, Color.green);
		renderer.setSeriesPaint(2, Color.red);
		renderer.setSeriesPaint(3, Color.blue);

		ChartUtilities.writeChartAsPNG(out, chart, 1000, 500);

	}
	
	public void drawPriceReportNotification(OutputStream out,
			HttpServletRequest request) throws HibernateException,
			ApplicationException, NamingException, IOException {

		DefaultCategoryDataset dataset = PriceReportDelegate
				.getPriceReportNotificationStatus();

		JFreeChart chart = ChartFactory.createBarChart("", "Asset Dept.",
				"Count", dataset, PlotOrientation.HORIZONTAL, true, true,
				false);

		String titleStr = "Price Report Notification";

		TextTitle title = new TextTitle(titleStr, new Font("SansSerif",
				Font.BOLD, 12));

		chart.setTitle(title);

		chart.setBackgroundPaint(new GradientPaint(0, 0, Color.white, 0, 1000,
				Color.blue));

		CategoryPlot plot = chart.getCategoryPlot();
		BarRenderer renderer = (BarRenderer) plot.getRenderer();
		renderer.setSeriesPaint(0, Color.orange);
		renderer.setSeriesPaint(1, Color.green);
		renderer.setSeriesPaint(2, Color.red);
		renderer.setSeriesPaint(3, Color.blue);

		ChartUtilities.writeChartAsPNG(out, chart, 1000, 2500);

	}
	
	public void drawPriceReportApprovalStatus(OutputStream out,
			HttpServletRequest request) throws HibernateException,
			ApplicationException, NamingException, IOException {

		DefaultCategoryDataset dataset = PriceReportDelegate
				.getPriceReportNotificationStatus();

		JFreeChart chart = ChartFactory.createBarChart("", "Asset Dept.",
				"Count", dataset, PlotOrientation.HORIZONTAL, true, true,
				false);

		String titleStr = "Price Report Approval Status";

		TextTitle title = new TextTitle(titleStr, new Font("SansSerif",
				Font.BOLD, 12));

		chart.setTitle(title);

		chart.setBackgroundPaint(new GradientPaint(0, 0, Color.white, 0, 1000,
				Color.blue));

		CategoryPlot plot = chart.getCategoryPlot();
		BarRenderer renderer = (BarRenderer) plot.getRenderer();
		renderer.setSeriesPaint(0, Color.orange);
		renderer.setSeriesPaint(1, Color.green);
		renderer.setSeriesPaint(2, Color.red);
		renderer.setSeriesPaint(3, Color.blue);

		ChartUtilities.writeChartAsPNG(out, chart, 1000, 500);

	}
	
	public void drawAccountLockStatus(OutputStream out,
			HttpServletRequest request) throws HibernateException,
			ApplicationException, NamingException, IOException {

		DefaultCategoryDataset dataset = MisldAccountSettingsReadDelegate
				.getAccountLockStatus();

		JFreeChart chart = ChartFactory.createBarChart("", "Asset Dept.",
				"Count", dataset, PlotOrientation.HORIZONTAL, true, true,
				false);

		String titleStr = "Account Locked Status";

		TextTitle title = new TextTitle(titleStr, new Font("SansSerif",
				Font.BOLD, 12));

		chart.setTitle(title);

		chart.setBackgroundPaint(new GradientPaint(0, 0, Color.white, 0, 1000,
				Color.blue));

		CategoryPlot plot = chart.getCategoryPlot();
		BarRenderer renderer = (BarRenderer) plot.getRenderer();
		renderer.setSeriesPaint(0, Color.orange);
		renderer.setSeriesPaint(1, Color.green);
		renderer.setSeriesPaint(2, Color.red);
		renderer.setSeriesPaint(3, Color.blue);

		ChartUtilities.writeChartAsPNG(out, chart, 1000, 500);

	}

}
